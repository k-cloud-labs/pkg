// Code generated by MockGen. DO NOT EDIT.
// Source: client/listers/policy/v1alpha1/clusteroverridepolicy.go

// Package overridemanager is a generated GoMock package.
package mock

import (
	"reflect"

	"github.com/golang/mock/gomock"
	"k8s.io/apimachinery/pkg/labels"

	"github.com/k-cloud-labs/pkg/apis/policy/v1alpha1"
)

// MockClusterOverridePolicyLister is a mock of ClusterOverridePolicyLister interface.
type MockClusterOverridePolicyLister struct {
	ctrl     *gomock.Controller
	recorder *MockClusterOverridePolicyListerMockRecorder
}

// MockClusterOverridePolicyListerMockRecorder is the mock recorder for MockClusterOverridePolicyLister.
type MockClusterOverridePolicyListerMockRecorder struct {
	mock *MockClusterOverridePolicyLister
}

// NewMockClusterOverridePolicyLister creates a new mock instance.
func NewMockClusterOverridePolicyLister(ctrl *gomock.Controller) *MockClusterOverridePolicyLister {
	mock := &MockClusterOverridePolicyLister{ctrl: ctrl}
	mock.recorder = &MockClusterOverridePolicyListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterOverridePolicyLister) EXPECT() *MockClusterOverridePolicyListerMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockClusterOverridePolicyLister) Get(name string) (*v1alpha1.ClusterOverridePolicy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*v1alpha1.ClusterOverridePolicy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockClusterOverridePolicyListerMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockClusterOverridePolicyLister)(nil).Get), name)
}

// List mocks base method.
func (m *MockClusterOverridePolicyLister) List(selector labels.Selector) ([]*v1alpha1.ClusterOverridePolicy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", selector)
	ret0, _ := ret[0].([]*v1alpha1.ClusterOverridePolicy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockClusterOverridePolicyListerMockRecorder) List(selector interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockClusterOverridePolicyLister)(nil).List), selector)
}
